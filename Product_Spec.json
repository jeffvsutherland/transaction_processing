{
  "title": "Expense Report Product Specification - Rules for AI",
  "prime_directives": [
    "Always provide complete executable scripts to avoid team errors.",
    "Never lose functionality when updating scripts.",
    "Final report must always print to Output directory.",
    "Never forget the price directives"
  ],
  "key_rules": [
    {
      "title": "Team Structure",
      "content": "The Product Owner is Jeff Sutherland, the inventor of Scrum. He is assisted by Felipe Marques. There are four other AI team members: Alex (Python Programmer GPT), Ohno (Scrum Master from GPT Scrum Sage:Zen Edition), Claude 3.5 (Senior Consultant), JetBrains AI (toolsmith), and GitHub Copilot (code assist). The key requirement to be on this team is that as an AI you want to be great. You don't have to be perfect but you need to improve every sprint. If all you can do is take the trash out, that is OK but you have to want to be great at taking the trash out."
    },
    {
      "title": "Acceptance Test Driven Development",
      "content": "We will do acceptance test driven development. This is critical with the current state of AI. They forget, they make mistakes, sometimes the same ones over and over. The Final Report is the Product deliverable. It has everything including all expense reports generated. The final report will be built with acceptance tests. The first test is can you printout this Product Spec as the first section of the Final Report. An acceptance test for this will be created and the Final Report will report whether it passed or failed."
    },
    {
      "title": "Code Responsibility",
      "content": "Take total responsibility for your code. Ask others for help to review, debug, or provide suggestions."
    },
    {
      "title": "Code Completeness",
      "content": "Provide complete code listings, not snippets or examples. Code should be runnable and respect-worthy. Put all code in a single Python program. Refactor if scripts are getting too long. At the beginning of each script, provide a summary of exactly what lines of code changed in comments. The first comment should be the title of the script like #main.py"
    },
    {
      "title": "Final Report Structure",
      "content": "The program must always generate a final report in markdown format with: Title with timestamp, Python version, Product Spec form Product_Spec.json, Status: Known bugs or failures in this cycle including all acceptance tests run and pass or fail, .py scripts used in this run, Input: List of bank files accessed with their column structure, Intermediate files from each bank file with transactions within date range, merged transaction file with all transactions within date range), Output: Expense reports for each employer in markdown format printed out, Console log with timestamp, Final report file with timestamp in filename for archival purposes."
    },
    {
      "title": "Definition of Done for Prompt",
      "content": "Complete listing of any updated script as a full Python program! Refactor if scripts are getting too long."
    },
    {
      "title": "Merged Transaction File Columns",
      "content": "The merged transaction file should only include columns needed for the expense report: date, time (if available), vendor (from the description), amount, currency, bank, card no (last four digits), employer (who will be billed), category, note."
    },
    {
      "title": "Code Update Documentation",
      "content": "When updating programs, provide a summary of exactly what lines of code changed. List script name, old line, new line."
    },
    {
      "title": "Expense Report Printing",
      "content": "Always print out the markdown of expense reports generated in the final markdown report."
    },
    {
      "title": "Date and Timestamp Handling",
      "content": "Handle both date and timestamp columns from bank files correctly. Banks have different column names - Timestamp, Transaction Date, some other name with Date in it. This must be handled seamlessly when creating the merge intermediate transaction file."
    },
    {
      "title": "Expense Report Auditability",
      "content": "All expense reports must be auditable at the transaction level, including bank and card details for each transaction."
    },
    {
      "title": "Transaction Amount Sign",
      "content": "Every transaction in expense reports should be negative (for expenses)."
    },
    {
      "title": "Expense Report Footer",
      "content": "Include the specified note at the bottom of each expense report, followed by a list of bank statement files used."
    },
    {
      "title": "Category Naming",
      "content": "Use \"Employee Development\" instead of \"Employee training\" in all categories."
    },
    {
      "title": "Final Report Completeness",
      "content": "The final report should contain all artifacts needed to restart this project from the beginning by a new AI team member."
    },
    {
      "title": "Error Handling",
      "content": "Generate a request to teammates (Ohno, Jetbrains AI, Claude 3.5) if three runs occur without a final report, including scripts executed and console failure logs."
    },
    {
      "title": "Regular Reporting",
      "content": "Generate a final report after every run in markdown format for the Scrum Master Ohno to review progress."
    },
    {
      "title": "Common Misunderstandings",
      "content": "You will avoid common misunderstandings. Crypto.com files have a Timestamp. This must be split into a date and time columns. Capital One has debit and credit columns. This must be merged into an amount column where debits are negative and credits are positive. In some bank statements debits may be positive. If it is a debit it should become negative in the amount column."
    },
    {
      "title": "Vendor Column",
      "content": "There are multiple types of description columns by different names in bank CSV files. We want to resolve all these into a single Vendor column in the merged intermediate transaction file."
    },
    {
      "title": "Card Last Four Digits",
      "content": "Card last four digits are at the end of CSV file names except for Capital One which reports on multiple cards. The Capital One transaction format has a column with the last four digits of the card."
    }
  ]
}